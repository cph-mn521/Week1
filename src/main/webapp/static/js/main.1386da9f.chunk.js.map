{"version":3,"sources":["apiFacade.js","components/Home.js","components/ListItem.js","components/About.js","components/Contact.js","components/Error.js","App.js","components/redirect.js","serviceWorker.js","index.js"],"names":["URL","facade","login","_callee","user","pass","options","res","json","regenerator_default","a","wrap","_context","prev","next","_this","makeOptions","username","password","fetch","sent","ok","status","fullError","setToken","token","abrupt","stop","localStorage","setItem","getToken","getItem","loggedIn","logout","removeItem","method","addToken","body","opts","headers","Content-type","Accept","this","JSON","stringify","list","then","response","unshift","nr","key","length","code","message","msg","Home","react_default","createElement","listItem","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","msgs","e","_this2","preventDefault","newItem","value","TryGet","setState","_this3","CheckIfUser","_this4","CheckIfAdmin","_this5","onSubmit","somefunction","ref","input","placeholder","id","type","onClick","className","map","item","React","Component","About","Contact","Error","LogIn","evt","onChange","defineProperty","target","react_router_dom","class","to","exact","href","react_router","path","component","ListItem","LoggedIn","role","App","_ref","asyncToGenerator","mark","_x","_x2","apply","arguments","App_LoggedIn","App_LogIn","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1386da9f.chunk.js","sourcesContent":["/* eslint-disable no-throw-literal */\r\nconst URL = \"http://matheradical.dk/CA3\";\r\nfunction handleHttpErrors(res) {\r\n    if (!res.ok) {\r\n        return Promise.reject({ status: res.status, fullError: res.json() })\r\n    }\r\n    return res.json();\r\n}\r\n\r\nclass ApiFacade {\r\n    //Insert utility-methods from a latter step (d) here\r\n    makeOptions(method, addToken, body) {\r\n        var opts = {\r\n            method: method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }\r\n        if (addToken && this.loggedIn()) {\r\n            opts.headers[\"x-access-token\"] = this.getToken();\r\n        }\r\n        if (body) {\r\n            opts.body = JSON.stringify(body);\r\n        }\r\n        return opts;\r\n    }\r\n\r\n    login = async (user, pass) => {\r\n        const options = this.makeOptions(\"POST\", true, { username: user, password: pass });\r\n       // return fetch(URL + \"/api/login\", options)\r\n       //     .then(handleHttpErrors) \r\n       //     .then(res => this.setToken(res.token))\r\n       //     .then(res => res)\r\n       const res = await fetch(URL + \"/api/login\", options)\r\n       const json = await res.json();\r\n       if(!res.ok){\r\n           throw {status: res.status, fullError: json}\r\n       }\r\n       this.setToken(res.token)\r\n       return json;\r\n    }\r\n    \r\n    CheckIfUser(list){\r\n        return fetch(URL+\"/api/Example/user\")\r\n                .then(function(response) {\r\n                        return response.json();\r\n                }).then(res=>{list.unshift(res)})\r\n    }\r\n    CheckIfAdmin(list){\r\n        return fetch(URL+\"/api/Example/admin\")\r\n                .then(function(response) {\r\n                        return response.json();\r\n                }).then(res=>{list.unshift(res)})\r\n    }\r\n\r\n    TryGet (nr,list){\r\n        return fetch(URL+\"/api/Example/\"+nr)\r\n                .then(function(response) {\r\n                        return response.json();\r\n                }).then(res=>{list.unshift({key: list.length+1 ,code : 200, message :res.msg})})\r\n\r\n    }\r\n\r\n    setToken = (token) => {\r\n        localStorage.setItem('jwtToken', token)\r\n    }\r\n    getToken = () => {\r\n        return localStorage.getItem('jwtToken')\r\n    }\r\n    loggedIn = () => {\r\n        const loggedIn = this.getToken() != null;\r\n        return loggedIn;\r\n    }\r\n    logout = () => {\r\n        localStorage.removeItem(\"jwtToken\");\r\n    }\r\n\r\n}\r\nconst facade = new ApiFacade();\r\nexport default facade;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n        <p>\r\n        Home</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport facade from \"../apiFacade\";\r\n\r\nclass listItem extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmsgs : [{key : 1 ,code : 200 , message : \"Succesfuld connect\"}]\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tsomefunction(e){\r\n\t\te.preventDefault();\r\n\t\tconst {msgs} = this.state;\r\n\t\tvar list = this.state.msgs;\r\n\t\tconst newItem = this.newItem.value;\r\n\t\tfacade.TryGet(newItem,list)\r\n\t\t\t\t.then(res => this.setState({ msgs: list}));\r\n\r\n\t}\r\n\r\n\tCheckIfUser(e){\r\n\t\te.preventDefault();\r\n\t\tconst {msgs} = this.state;\r\n\t\tvar list = this.state.msgs;\r\n\t\tfacade.CheckIfUser(list)\r\n\t\t\t\t.then(res => this.setState({ msgs: list}));\r\n\t}\r\n\tCheckIfAdmin(e){\r\n\t\te.preventDefault();\r\n\t\tconst {msgs} = this.state;\r\n\t\tvar list = this.state.msgs;\r\n\t\tfacade.CheckIfAdmin(list)\r\n\t\t\t\t.then(res => this.setState({ msgs: list}));\r\n\t}\r\n\trender(){\r\n\t\tconst {msgs} = this.state;\r\n\t\treturn(\r\n\t\t<div>\r\n\t\t<form onSubmit ={(e) => {this.somefunction(e)}} >\r\n\t\t\t<label> Test en Get metode</label>\r\n\t\t\t<input ref={input => this.newItem = input} placeholder=\"5\" id=\"msg\" />\r\n\t\t\t<button type=\"submit\"> add </button>\r\n\t\t</form>\r\n\t\t<button onClick={(e) => {this.CheckIfAdmin(e)}}> er du admin? </button> <button onClick={(e) => {this.CheckIfUser(e)}}> er du User? </button>\r\n\t\t<table className =\"table\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n    \t\t\t\t<th>#</th>\r\n    \t\t\t\t<th>Item</th>\r\n    \t\t\t\t<th>time</th> \r\n  \t\t\t\t</tr> \r\n  \t\t\t</thead>\r\n  \t\t\t<tbody>\r\n  \t\t\t{\r\n  \t\t\t\tmsgs.map(item =>{\r\n  \t\t\t\t\treturn(\r\n  \t\t\t\t\t\t<tr  key={item.key}>\r\n  \t\t\t\t\t\t\t<td>{item.code}</td>\r\n  \t\t\t\t\t\t\t<td>{item.message}</td>\r\n  \t\t\t\t\t\t</tr> \r\n  \t\t\t\t\t)\r\n  \t\t\t\t})\r\n  \t\t\t}\r\n  \t\t\t</tbody>\r\n  \t\t</table>\r\n\r\n  \t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default listItem","import React from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n        <p>\r\n        aboot\r\n        </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n        <p>\r\n        Contact</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n        <p>\r\n        page does not exist</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React, { Component } from \"react\"\r\nimport facade from \"./apiFacade\";\r\nimport { BrowserRouter, Route, Switch, NavLink } from 'react-router-dom'\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Contact from './components/Contact';\r\nimport Error from './components/Error';\r\nimport ListItem from './components/ListItem';\r\nimport redirect from './components/redirect';\r\n\r\nclass LogIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: \"\", password: \"\" }\r\n  }\r\n  login = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.login(this.state.username, this.state.password);\r\n  }\r\n\r\n  onChange = (evt) => {\r\n    this.setState({ [evt.target.id]: evt.target.value })\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <div>\r\n        <BrowserRouter>\r\n          <ul class=\"header\">\r\n            <li>\r\n              <NavLink to=\"/\" exact>Home</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/about\">About</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/contact\">Contact</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/ListItem\">API test</NavLink>\r\n            </li>\r\n            <li>\r\n              <a href=\"/ca3/documentation/\"> Documentation </a>\r\n            </li>\r\n            <li>\r\n              <form onSubmit={this.login} onChange={this.onChange} >\r\n                <input placeholder=\"User Name\" id=\"username\" />\r\n                <input placeholder=\"Password\" id=\"password\" />\r\n                <button>Login</button>\r\n              </form>\r\n            </li>\r\n          </ul>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route path=\"/ListItem\" component={ListItem} />\r\n            <Route component={Error} />\r\n\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass LoggedIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { username: \"\" };\r\n  }\r\n  componentDidMount() {\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <BrowserRouter >\r\n          <ul class=\"header\">\r\n            <li>\r\n              <NavLink to=\"/\" exact>Home</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/about\">About</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/contact\">Contact</NavLink>\r\n            </li>\r\n            <li>\r\n              <p class=\"header\">logged in as: {this.props.username}, role: {this.props.role}</p>\r\n            </li>\r\n          </ul>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route component={Error} />\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { loggedIn: false, username: \"\", role: \"\" }\r\n  }\r\n  logout = () => {\r\n    facade.logout();\r\n    this.setState({ loggedIn: false });\r\n  }\r\n\r\n\r\n  login = async (username, pass) => {\r\n   const res = await facade.login(username, pass);\r\n      this.setState({ loggedIn: true, username: username, role: res.role });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n\r\n      <div>\r\n        {!this.state.loggedIn ? (<LogIn login={this.login} />) :\r\n          (<div>\r\n            <LoggedIn username={this.state.username} role={this.state.role} />\r\n            <button onClick={this.logout}>Logout</button>\r\n          </div>)}\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nclass redirect extends React.Component {\r\n  state = {\r\n    redirect: true\r\n  }\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to='ca3/documentation/' />\r\n    }\r\n  }\r\n  render () {\r\n    return (\r\n       <div>\r\n        <a href=\"documentation/\"> Documentation </a>\r\n       </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default redirect","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}